###### Create Service with ClusterIP For ReplicationController 

Before starting a service, we'd like to create two sets of RC. 

$ vim lab7-rc1.yaml

apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx-1.12
  namespace: fleet1
spec:
  replicas: 2
  selector:
    project: lab7
    service: web
    version: "0.1"
  template:
    metadata:
      name: nginx
      labels:
        project: lab7
        service: web
        version: "0.1"
    spec:
      containers:
      - name: nginx
        image: nginx:1.12.0
        ports:
        - containerPort: 80
		
:wq (save and exit) 

vim lab7-rc1.yaml

apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx-1.13
  namespace: fleet1
spec:
  replicas: 2
  selector:
    project: lab7
    service: web
    version: "0.2"
  template:
    metadata:
      name: nginx
      labels:
        project: lab7
        service: web
        version: "0.2"
    spec:
      containers:
      - name: nginx
        image: nginx:1.13.1
        ports:
        - containerPort: 80

kubectl apply -f lab7-rc1.yaml
kubectl apply -f lab7-rc2.yaml

kubectl get rc -n fleet1

$ vim lab7-service.yaml

kind: Service
apiVersion: v1
metadata:
  name: nginx-service
  namespace: fleet1
spec:
  selector:
    project: lab7
    service: web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    name: http
	
:wq (save and exit) 

kubectl apply -f lab7-service.yaml 
kubectl describe  svc nginx-service -n fleet1

kubectl logs <podname-nginx-1.12-t8x9f>  -n fleet1
