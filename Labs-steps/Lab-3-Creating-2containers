##### Crearting the container inside the pods

 vim two-containers-pod.yaml

apiVersion: v1
kind: Pod
metadata:
  name: 2c-pod
  namespace: fleet1
spec:
  containers:
  - name: web
    image: nginx
  - name: centos
    image: centos
    command: ["/bin/sh", "-c", "while : ;do curl http://localhost:80/;sleep 10; done"]

:wq (save and exit) 

kubectl apply -f two-containers-pod.yaml

kubectl get pods -n fleet1

Use kubectl command to get stdout for the container.
Commands
 kubectl logs 2c-pod -c centos -n fleet1
 kubectl describe pod 2c-pod -n fleet1
 kubectl delete pod  2c-pod -n fleet1
 kubectl get pod -n fleet1
 kubectl get pods --sort-by='.status.containerStatuses[0].restartCount' -n fleet1
 kubectl get pods -o=custom-columns=NAME:.metadata.name,CONTAINERS:.spec.containers[*] -n fleet1 ## list the pods and its containers with metadata
 kubectl get pods 2c-pod -o jsonpath='{.spec.containers[*].name}' -n fleet1 ## list the containers in the pods
 kubectl exec -ti 2c-pod -c centos /bin/bash -n fleet1 ## go inside the container


